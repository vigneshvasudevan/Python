1. Sorting algos (selection, bubble, insertion, merge, quick)
2. Implement binary search
3. Implement fibonnaci (using recursion and improve the recursive solution by using cache)
4. given a number 'n', print all numbers until 'n' containing say 7 -> n = 100 then o/p: 7, 17, 27, 37, ..., 71, 72, ..., 97
5. https://leetcode.com/problems/climbing-stairs/ ; You are climbing a staircase. It takes n steps to reach the top.Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?
6. https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
7. https://leetcode.com/problems/valid-palindrome/
8. given a list of numbers, return the kth smallest number 
  [10, 20, 15, 4, 7, 9] , 2 -> o/p: 7 is the 2nd smallest number in the given list
